@inject HttpClient httpClient
@inject UpdateService updateSerice

<div class="UserDisplayComponentContainer">
    <div class="leftArrow">
        <img @onclick="() => { position--; currentDisplayedUser = allClanUsers[Math.Abs(position % allClanUsers.Count)]; StateHasChanged(); }" class="left icon" src="/next (6).png" />
    </div>
    <div class="mainProfile">
        <div class="Showcase">
            <h3></h3>
        </div>
        @if (currentDisplayedUser != null)
        {
            <div class="DisplayUserContainer">
                <h3 style="margin-bottom: 8px;">@currentDisplayedUser.UserName</h3>
                <h4 class="mb">@currentDisplayedUser.bio</h4>
                <div style="display: flex; height: 140px; justify-content: space-between;">
                    <div>
                        <div class="mb" style="display: flex;">
                            <h4>Location: @currentDisplayedUser.location</h4>
                        </div>
                        <div>
                            <h4>Links:</h4>
                            <div class="Links">
                                <div>
                                    <a href="@currentDisplayedUser.html_url">GitHub</a>
                                </div>
                                <div>
                                    <a href="@currentDisplayedUser.blog">Blog</a>
                                </div>
                                <div>
                                    <a href="@currentDisplayedUser.repoURI">Repos</a>
                                </div>
                            </div>
                            <h4 style="margin: 5px;">Joined Groups:</h4>
                            @if (currentDisplayedUser.Groups != null)
                            {
                                foreach (var group in currentDisplayedUser.Groups)
                                {
                                    <h4 style="margin-bottom: 4px;">@group.Name</h4>
                                }
                            }
                        </div>
                    </div>
                    <img class="mb" src="@currentDisplayedUser.PictureURI" />
                </div>
            </div>
        }
    </div>
    <div class="rightArrow">
        <img class="icon" @onclick="() => { position++; currentDisplayedUser = allClanUsers[position % allClanUsers.Count]; StateHasChanged(); }" src="/next (6).png" />
    </div>
</div>

@code{
    [Parameter]
    public string SelectedUserId { get; set; }
    private List<OnlineUserDTO> allClanUsers;
    private OnlineUserDTO currentDisplayedUser;
    private int position;
    protected override async Task OnInitializedAsync()
    {
        updateSerice.UpdateEvent += async () =>
        {
            allClanUsers = await httpClient.GetFromJsonAsync<List<OnlineUserDTO>>("user/allclanusers");
            currentDisplayedUser = allClanUsers[position];
            StateHasChanged();
        };
        allClanUsers = await httpClient.GetFromJsonAsync<List<OnlineUserDTO>>("user/allclanusers");
        position = new Random().Next(0, Math.Max(1, allClanUsers.Count));
        currentDisplayedUser = allClanUsers[position];
    }
}